// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: gAKbcXWngnVV2asmkth1no
// Component: 8oOH9sh1z5
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Header3 from "../../Header3"; // plasmic-import: v_kbpI47Yki/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic_copy_of_demo_rubrica.module.css"; // plasmic-import: gAKbcXWngnVV2asmkth1no/projectcss
import sty from "./PlasmicPrivacyPolicy.module.css"; // plasmic-import: 8oOH9sh1z5/css

export const PlasmicPrivacyPolicy__VariantProps = new Array();

export const PlasmicPrivacyPolicy__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicPrivacyPolicy__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"privacyPolicy"}
          data-plasmic-override={overrides.privacyPolicy}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.privacyPolicy
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__yie9)}>
            <Header3
              data-plasmic-name={"header3"}
              data-plasmic-override={overrides.header3}
              className={classNames("__wab_instance", sty.header3)}
            />
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__kFshX)}>
            <div
              data-plasmic-name={"text"}
              data-plasmic-override={overrides.text}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                {
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{
                          color: "#000000",
                          fontWeight: 700,
                          textDecorationLine: "underline"
                        }}
                      >
                        {"Privacy Policy"}
                      </span>
                    </React.Fragment>
                  </h1>
                }

                <React.Fragment>
                  {
                    'Last updated: (add date)\nMy Company (change this) ("us", "we", or "our") operates http://www.mysite.com (change this) (the\n"Site"). This page informs you of our policies regarding the collection, use and disclosure of\nPersonal Information we receive from users of the Site.\nWe use your Personal Information only for providing and improving the Site. By using the Site, you\nagree to the collection and use of information in accordance with this policy.\nInformation Collection And Use\nWhile using our Site, we may ask you to provide us with certain personally identifiable information\nthat can be used to contact or identify you. Personally identifiable information may include, but is not\nlimited to your name ("Personal Information").\nLog Data\nLike many site operators, we collect information that your browser sends whenever you visit our Site\n("Log Data").\nThis Log Data may include information such as your computer\'s Internet Protocol ("IP") address,\nbrowser type, browser version, the pages of our Site that you visit, the time and date of your visit,\nthe time spent on those pages and other statistics.\nIn addition, we may use third party services such as Google Analytics that collect, monitor and\nanalyze this â€¦\nThe Log Data section is for businesses that use analytics or tracking services in websites or\napps, like Google Analytics. For the full disclosure section, create your own Privacy Policy.\nCommunications\nWe may use your Personal Information to contact you with newsletters, marketing or promotional\nmaterials and other information that ...\nThe Communications section is for businesses that may contact users via email (email\nnewsletters) or other methods. For the full disclosure section, create your own Privacy Policy.\nCookies\nCookies are files with small amount of data, which may include an anonymous unique identifier.\nCookies are sent to your browser from a web site and stored on your computer\'s hard drive.\nLike many sites, we use "cookies" to collect information. You can instruct your browser to refuse all\ncookies or to indicate when a cookie is being sent. However, if you do not accept cookies, you may\nnot be able to use some portions of our Site.\nSecurity\nThe security of your Personal Information is important to us, but remember that no method of\ntransmission over the Internet, or method of electronic storage, is 100% secure. While we strive to\nuse commercially acceptable means to protect your Personal Information, we cannot guarantee its\nabsolute security.\nChanges To This Privacy Policy\nThis Privacy Policy is effective as of (add date) and will remain in effect except with respect to any\nchanges in its provisions in the future, which will be in effect immediately after being posted on this\npage.\nWe reserve the right to update or change our Privacy Policy at any time and you should check this\nPrivacy Policy periodically. Your continued use of the Service after we post any modifications to the\nPrivacy Policy on this page will constitute your acknowledgment of the modifications and your\nconsent to abide and be bound by the modified Privacy Policy.\nIf we make any material changes to this Privacy Policy, we will notify you either through the email\naddress you have provided us, or by placing a prominent notice on our website.\nContact Us\nIf you have any questions about this Privacy Policy, please contact us.\n'
                  }
                </React.Fragment>
              </React.Fragment>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  privacyPolicy: ["privacyPolicy", "header3", "text", "h1"],
  header3: ["header3"],
  text: ["text", "h1"],
  h1: ["h1"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicPrivacyPolicy__ArgProps,
          internalVariantPropNames: PlasmicPrivacyPolicy__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPrivacyPolicy__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "privacyPolicy") {
    func.displayName = "PlasmicPrivacyPolicy";
  } else {
    func.displayName = `PlasmicPrivacyPolicy.${nodeName}`;
  }
  return func;
}

export const PlasmicPrivacyPolicy = Object.assign(
  // Top-level PlasmicPrivacyPolicy renders the root element
  makeNodeComponent("privacyPolicy"),
  {
    // Helper components rendering sub-elements
    header3: makeNodeComponent("header3"),
    text: makeNodeComponent("text"),
    h1: makeNodeComponent("h1"),
    // Metadata about props expected for PlasmicPrivacyPolicy
    internalVariantProps: PlasmicPrivacyPolicy__VariantProps,
    internalArgProps: PlasmicPrivacyPolicy__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicPrivacyPolicy;
/* prettier-ignore-end */
